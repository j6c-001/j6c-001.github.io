{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec3 camera;\nuniform vec3 target;\nuniform vec3 sound;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nmat3 FLT_flutter_local_setCamera(vec3 ro, vec3 ta, float cr)\n{\n    vec3 cw = normalize(ta - ro);\n    vec3 cp = vec3(sin(cr), cos(cr), 0.0);\n    vec3 cu = normalize(cross(cw, cp));\n    vec3 cv = normalize(cross(cu, cw));\n    return mat3(vec3(cu), vec3(cv), vec3(cw));\n}\n\nfloat FLT_flutter_local_random(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.98980045318603515625, 78.233001708984375))) * 43758.546875);\n}\n\nfloat FLT_flutter_local_noise(vec2 uv)\n{\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    f = (f * f) * (vec2(3.0) - (f * 2.0));\n    vec2 param = i + vec2(0.0);\n    float lb = FLT_flutter_local_random(param);\n    vec2 param_1 = i + vec2(1.0, 0.0);\n    float rb = FLT_flutter_local_random(param_1);\n    vec2 param_2 = i + vec2(0.0, 1.0);\n    float lt = FLT_flutter_local_random(param_2);\n    vec2 param_3 = i + vec2(1.0);\n    float rt = FLT_flutter_local_random(param_3);\n    return mix(mix(lb, rb, f.x), mix(lt, rt, f.x), f.y);\n}\n\nfloat FLT_flutter_local_fbm(inout vec2 uv)\n{\n    float value = 0.0;\n    float amplitude = 0.5;\n    for (int i = 0; i < 8; i++)\n    {\n        vec2 param = uv;\n        value += (FLT_flutter_local_noise(param) * amplitude);\n        amplitude *= 0.5;\n        uv *= 2.0;\n    }\n    return value;\n}\n\nvec3 FLT_flutter_local_Sky(vec3 ro, vec3 rd)\n{\n    float dist = (100000.0 - ro.y) / rd.y;\n    vec2 p = (ro + (rd * dist)).xz;\n    p *= 1.2000000424450263381004333496094e-05;\n    vec3 lightDir = vec3(-0.92222464084625244140625, 0.1729171276092529296875, -0.345834255218505859375);\n    float sundot = clamp(dot(rd, lightDir), 0.0, 1.0);\n    vec3 cloudCol = vec3(1.0);\n    vec3 skyCol = vec3(0.300000011920928955078125, 0.5, 0.85000002384185791015625) - vec3((rd.y * rd.y) * 0.5);\n    skyCol = mix(skyCol, vec3(0.5950000286102294921875, 0.637499988079071044921875, 0.722500026226043701171875), vec3(pow(1.0 - max(rd.y, 0.0), 4.0)));\n    vec3 sun = vec3(0.25, 0.17499999701976776123046875, 0.100000001490116119384765625) * pow(sundot, 5.0);\n    sun += (vec3(0.25, 0.20000000298023223876953125, 0.1500000059604644775390625) * pow(sundot, 64.0));\n    sun += (vec3(0.20000000298023223876953125, 0.1599999964237213134765625, 0.119999997317790985107421875) * pow(sundot, 512.0));\n    skyCol += sun;\n    float t = iTime * 0.100000001490116119384765625;\n    vec2 param = vec2(p.x - t, p.y - t);\n    float _251 = FLT_flutter_local_fbm(param);\n    float den = _251;\n    skyCol = mix(skyCol, cloudCol, vec3(smoothstep(0.4000000059604644775390625, 0.800000011920928955078125, den)));\n    return skyCol;\n}\n\nvoid FLT_main()\n{\n    vec2 fragCoord = FLT_flutter_local_FlutterFragCoord();\n    vec2 uv = fragCoord / iResolution;\n    uv -= vec2(0.5);\n    uv.x *= (iResolution.x / iResolution.y);\n    uv.y = 1.0 - uv.y;\n    vec3 ro_1 = camera;\n    vec3 ta = target;\n    vec3 param_1 = ro_1;\n    vec3 param_2 = ta;\n    float param_3 = 0.0;\n    mat3 cam = FLT_flutter_local_setCamera(param_1, param_2, param_3);\n    vec3 rd_1 = normalize(cam * vec3(uv, 1.0));\n    vec3 param_4 = ro_1;\n    vec3 param_5 = rd_1;\n    vec3 col = FLT_flutter_local_Sky(param_4, param_5);\n    fragColor = vec4(vec3(col), 1.0);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 0,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "iResolution",
      "rows": 2,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 1,
      "name": "iTime",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 2,
      "name": "camera",
      "rows": 3,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 3,
      "name": "target",
      "rows": 3,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 4,
      "name": "sound",
      "rows": 3,
      "type": 10
    }
  ]
}